// Code generated by protoc-gen-go. DO NOT EDIT.
// source: frontend.proto

package schema

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	duration "github.com/golang/protobuf/ptypes/duration"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// GetServicesRequest is a request body for GetServices method
type GetServicesRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetServicesRequest) Reset()         { *m = GetServicesRequest{} }
func (m *GetServicesRequest) String() string { return proto.CompactTextString(m) }
func (*GetServicesRequest) ProtoMessage()    {}
func (*GetServicesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_eca3873955a29cfe, []int{0}
}

func (m *GetServicesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetServicesRequest.Unmarshal(m, b)
}
func (m *GetServicesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetServicesRequest.Marshal(b, m, deterministic)
}
func (m *GetServicesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetServicesRequest.Merge(m, src)
}
func (m *GetServicesRequest) XXX_Size() int {
	return xxx_messageInfo_GetServicesRequest.Size(m)
}
func (m *GetServicesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetServicesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetServicesRequest proto.InternalMessageInfo

// GetServicesResponse is a response body for GetServices method
type GetServicesResponse struct {
	// services - names of the services that had ever pushed data to this memprofiler
	Services             []string `protobuf:"bytes,1,rep,name=services,proto3" json:"services,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetServicesResponse) Reset()         { *m = GetServicesResponse{} }
func (m *GetServicesResponse) String() string { return proto.CompactTextString(m) }
func (*GetServicesResponse) ProtoMessage()    {}
func (*GetServicesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_eca3873955a29cfe, []int{1}
}

func (m *GetServicesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetServicesResponse.Unmarshal(m, b)
}
func (m *GetServicesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetServicesResponse.Marshal(b, m, deterministic)
}
func (m *GetServicesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetServicesResponse.Merge(m, src)
}
func (m *GetServicesResponse) XXX_Size() int {
	return xxx_messageInfo_GetServicesResponse.Size(m)
}
func (m *GetServicesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetServicesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetServicesResponse proto.InternalMessageInfo

func (m *GetServicesResponse) GetServices() []string {
	if m != nil {
		return m.Services
	}
	return nil
}

// GetInstancesRequest is a request body for GetInstances method
type GetInstancesRequest struct {
	// service - identifier for a group of similar services
	Service              string   `protobuf:"bytes,1,opt,name=service,proto3" json:"service,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetInstancesRequest) Reset()         { *m = GetInstancesRequest{} }
func (m *GetInstancesRequest) String() string { return proto.CompactTextString(m) }
func (*GetInstancesRequest) ProtoMessage()    {}
func (*GetInstancesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_eca3873955a29cfe, []int{2}
}

func (m *GetInstancesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetInstancesRequest.Unmarshal(m, b)
}
func (m *GetInstancesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetInstancesRequest.Marshal(b, m, deterministic)
}
func (m *GetInstancesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetInstancesRequest.Merge(m, src)
}
func (m *GetInstancesRequest) XXX_Size() int {
	return xxx_messageInfo_GetInstancesRequest.Size(m)
}
func (m *GetInstancesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetInstancesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetInstancesRequest proto.InternalMessageInfo

func (m *GetInstancesRequest) GetService() string {
	if m != nil {
		return m.Service
	}
	return ""
}

// GetInstancesResponse is a response body for GetInstances method
type GetInstancesResponse struct {
	// instances - list of a particular kind of services instances
	Instances            []*InstanceDescription `protobuf:"bytes,1,rep,name=instances,proto3" json:"instances,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *GetInstancesResponse) Reset()         { *m = GetInstancesResponse{} }
func (m *GetInstancesResponse) String() string { return proto.CompactTextString(m) }
func (*GetInstancesResponse) ProtoMessage()    {}
func (*GetInstancesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_eca3873955a29cfe, []int{3}
}

func (m *GetInstancesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetInstancesResponse.Unmarshal(m, b)
}
func (m *GetInstancesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetInstancesResponse.Marshal(b, m, deterministic)
}
func (m *GetInstancesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetInstancesResponse.Merge(m, src)
}
func (m *GetInstancesResponse) XXX_Size() int {
	return xxx_messageInfo_GetInstancesResponse.Size(m)
}
func (m *GetInstancesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetInstancesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetInstancesResponse proto.InternalMessageInfo

func (m *GetInstancesResponse) GetInstances() []*InstanceDescription {
	if m != nil {
		return m.Instances
	}
	return nil
}

// GetSessionsRequest is a request body for GetSessions method
type GetSessionsRequest struct {
	// instance - service instance information
	Instance             *InstanceDescription `protobuf:"bytes,1,opt,name=instance,proto3" json:"instance,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *GetSessionsRequest) Reset()         { *m = GetSessionsRequest{} }
func (m *GetSessionsRequest) String() string { return proto.CompactTextString(m) }
func (*GetSessionsRequest) ProtoMessage()    {}
func (*GetSessionsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_eca3873955a29cfe, []int{4}
}

func (m *GetSessionsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetSessionsRequest.Unmarshal(m, b)
}
func (m *GetSessionsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetSessionsRequest.Marshal(b, m, deterministic)
}
func (m *GetSessionsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetSessionsRequest.Merge(m, src)
}
func (m *GetSessionsRequest) XXX_Size() int {
	return xxx_messageInfo_GetSessionsRequest.Size(m)
}
func (m *GetSessionsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetSessionsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetSessionsRequest proto.InternalMessageInfo

func (m *GetSessionsRequest) GetInstance() *InstanceDescription {
	if m != nil {
		return m.Instance
	}
	return nil
}

// GetSessionsResponse is a response body for GetSessions method
type GetSessionsResponse struct {
	// sessions is a list of  information about available sessions
	Sessions             []*Session `protobuf:"bytes,1,rep,name=sessions,proto3" json:"sessions,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *GetSessionsResponse) Reset()         { *m = GetSessionsResponse{} }
func (m *GetSessionsResponse) String() string { return proto.CompactTextString(m) }
func (*GetSessionsResponse) ProtoMessage()    {}
func (*GetSessionsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_eca3873955a29cfe, []int{5}
}

func (m *GetSessionsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetSessionsResponse.Unmarshal(m, b)
}
func (m *GetSessionsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetSessionsResponse.Marshal(b, m, deterministic)
}
func (m *GetSessionsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetSessionsResponse.Merge(m, src)
}
func (m *GetSessionsResponse) XXX_Size() int {
	return xxx_messageInfo_GetSessionsResponse.Size(m)
}
func (m *GetSessionsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetSessionsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetSessionsResponse proto.InternalMessageInfo

func (m *GetSessionsResponse) GetSessions() []*Session {
	if m != nil {
		return m.Sessions
	}
	return nil
}

// SubscribeForSessionRequest is a request body for SubscribeForSession request
type SubscribeForSessionRequest struct {
	Session              *SessionDescription `protobuf:"bytes,1,opt,name=session,proto3" json:"session,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *SubscribeForSessionRequest) Reset()         { *m = SubscribeForSessionRequest{} }
func (m *SubscribeForSessionRequest) String() string { return proto.CompactTextString(m) }
func (*SubscribeForSessionRequest) ProtoMessage()    {}
func (*SubscribeForSessionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_eca3873955a29cfe, []int{6}
}

func (m *SubscribeForSessionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubscribeForSessionRequest.Unmarshal(m, b)
}
func (m *SubscribeForSessionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubscribeForSessionRequest.Marshal(b, m, deterministic)
}
func (m *SubscribeForSessionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubscribeForSessionRequest.Merge(m, src)
}
func (m *SubscribeForSessionRequest) XXX_Size() int {
	return xxx_messageInfo_SubscribeForSessionRequest.Size(m)
}
func (m *SubscribeForSessionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SubscribeForSessionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SubscribeForSessionRequest proto.InternalMessageInfo

func (m *SubscribeForSessionRequest) GetSession() *SessionDescription {
	if m != nil {
		return m.Session
	}
	return nil
}

// MemoryUtilizationRate is a collection of rate values for memory consumption indicators.
// Formally, the rate (or velocity) is the first time derivative of any memory consumption indicator.
// For Bytes rate units are bytes per second, for Objects rate units are units per second
type MemoryUtilizationRate struct {
	// span is a time span that is used to compute rates
	Span *duration.Duration `protobuf:"bytes,1,opt,name=span,proto3" json:"span,omitempty"`
	// values contains actual rates for a specified time span
	Values               *MemoryUtilizationRate_Values `protobuf:"bytes,2,opt,name=values,proto3" json:"values,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                      `json:"-"`
	XXX_unrecognized     []byte                        `json:"-"`
	XXX_sizecache        int32                         `json:"-"`
}

func (m *MemoryUtilizationRate) Reset()         { *m = MemoryUtilizationRate{} }
func (m *MemoryUtilizationRate) String() string { return proto.CompactTextString(m) }
func (*MemoryUtilizationRate) ProtoMessage()    {}
func (*MemoryUtilizationRate) Descriptor() ([]byte, []int) {
	return fileDescriptor_eca3873955a29cfe, []int{7}
}

func (m *MemoryUtilizationRate) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MemoryUtilizationRate.Unmarshal(m, b)
}
func (m *MemoryUtilizationRate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MemoryUtilizationRate.Marshal(b, m, deterministic)
}
func (m *MemoryUtilizationRate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MemoryUtilizationRate.Merge(m, src)
}
func (m *MemoryUtilizationRate) XXX_Size() int {
	return xxx_messageInfo_MemoryUtilizationRate.Size(m)
}
func (m *MemoryUtilizationRate) XXX_DiscardUnknown() {
	xxx_messageInfo_MemoryUtilizationRate.DiscardUnknown(m)
}

var xxx_messageInfo_MemoryUtilizationRate proto.InternalMessageInfo

func (m *MemoryUtilizationRate) GetSpan() *duration.Duration {
	if m != nil {
		return m.Span
	}
	return nil
}

func (m *MemoryUtilizationRate) GetValues() *MemoryUtilizationRate_Values {
	if m != nil {
		return m.Values
	}
	return nil
}

// Values is a set of rate values
type MemoryUtilizationRate_Values struct {
	AllocObjects         float64  `protobuf:"fixed64,1,opt,name=alloc_objects,json=allocObjects,proto3" json:"alloc_objects,omitempty"`
	AllocBytes           float64  `protobuf:"fixed64,2,opt,name=alloc_bytes,json=allocBytes,proto3" json:"alloc_bytes,omitempty"`
	FreeObjects          float64  `protobuf:"fixed64,3,opt,name=free_objects,json=freeObjects,proto3" json:"free_objects,omitempty"`
	FreeBytes            float64  `protobuf:"fixed64,4,opt,name=free_bytes,json=freeBytes,proto3" json:"free_bytes,omitempty"`
	InUseObjects         float64  `protobuf:"fixed64,5,opt,name=in_use_objects,json=inUseObjects,proto3" json:"in_use_objects,omitempty"`
	InUseBytes           float64  `protobuf:"fixed64,6,opt,name=in_use_bytes,json=inUseBytes,proto3" json:"in_use_bytes,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MemoryUtilizationRate_Values) Reset()         { *m = MemoryUtilizationRate_Values{} }
func (m *MemoryUtilizationRate_Values) String() string { return proto.CompactTextString(m) }
func (*MemoryUtilizationRate_Values) ProtoMessage()    {}
func (*MemoryUtilizationRate_Values) Descriptor() ([]byte, []int) {
	return fileDescriptor_eca3873955a29cfe, []int{7, 0}
}

func (m *MemoryUtilizationRate_Values) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MemoryUtilizationRate_Values.Unmarshal(m, b)
}
func (m *MemoryUtilizationRate_Values) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MemoryUtilizationRate_Values.Marshal(b, m, deterministic)
}
func (m *MemoryUtilizationRate_Values) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MemoryUtilizationRate_Values.Merge(m, src)
}
func (m *MemoryUtilizationRate_Values) XXX_Size() int {
	return xxx_messageInfo_MemoryUtilizationRate_Values.Size(m)
}
func (m *MemoryUtilizationRate_Values) XXX_DiscardUnknown() {
	xxx_messageInfo_MemoryUtilizationRate_Values.DiscardUnknown(m)
}

var xxx_messageInfo_MemoryUtilizationRate_Values proto.InternalMessageInfo

func (m *MemoryUtilizationRate_Values) GetAllocObjects() float64 {
	if m != nil {
		return m.AllocObjects
	}
	return 0
}

func (m *MemoryUtilizationRate_Values) GetAllocBytes() float64 {
	if m != nil {
		return m.AllocBytes
	}
	return 0
}

func (m *MemoryUtilizationRate_Values) GetFreeObjects() float64 {
	if m != nil {
		return m.FreeObjects
	}
	return 0
}

func (m *MemoryUtilizationRate_Values) GetFreeBytes() float64 {
	if m != nil {
		return m.FreeBytes
	}
	return 0
}

func (m *MemoryUtilizationRate_Values) GetInUseObjects() float64 {
	if m != nil {
		return m.InUseObjects
	}
	return 0
}

func (m *MemoryUtilizationRate_Values) GetInUseBytes() float64 {
	if m != nil {
		return m.InUseBytes
	}
	return 0
}

// LocationMetrics is a set of memory allocation statistics
// that happened on a particular line of source code
type LocationMetrics struct {
	// rates represents memory consumption rates estimated
	// for some averaging window defined by server
	Rates []*MemoryUtilizationRate `protobuf:"bytes,1,rep,name=rates,proto3" json:"rates,omitempty"`
	// callstack describes location in code where the allocation happened
	Callstack            *Callstack `protobuf:"bytes,2,opt,name=callstack,proto3" json:"callstack,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *LocationMetrics) Reset()         { *m = LocationMetrics{} }
func (m *LocationMetrics) String() string { return proto.CompactTextString(m) }
func (*LocationMetrics) ProtoMessage()    {}
func (*LocationMetrics) Descriptor() ([]byte, []int) {
	return fileDescriptor_eca3873955a29cfe, []int{8}
}

func (m *LocationMetrics) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LocationMetrics.Unmarshal(m, b)
}
func (m *LocationMetrics) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LocationMetrics.Marshal(b, m, deterministic)
}
func (m *LocationMetrics) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LocationMetrics.Merge(m, src)
}
func (m *LocationMetrics) XXX_Size() int {
	return xxx_messageInfo_LocationMetrics.Size(m)
}
func (m *LocationMetrics) XXX_DiscardUnknown() {
	xxx_messageInfo_LocationMetrics.DiscardUnknown(m)
}

var xxx_messageInfo_LocationMetrics proto.InternalMessageInfo

func (m *LocationMetrics) GetRates() []*MemoryUtilizationRate {
	if m != nil {
		return m.Rates
	}
	return nil
}

func (m *LocationMetrics) GetCallstack() *Callstack {
	if m != nil {
		return m.Callstack
	}
	return nil
}

// SessionMetrics contains list of heap allocation metrics per every location
type SessionMetrics struct {
	Locations            []*LocationMetrics `protobuf:"bytes,1,rep,name=locations,proto3" json:"locations,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *SessionMetrics) Reset()         { *m = SessionMetrics{} }
func (m *SessionMetrics) String() string { return proto.CompactTextString(m) }
func (*SessionMetrics) ProtoMessage()    {}
func (*SessionMetrics) Descriptor() ([]byte, []int) {
	return fileDescriptor_eca3873955a29cfe, []int{9}
}

func (m *SessionMetrics) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SessionMetrics.Unmarshal(m, b)
}
func (m *SessionMetrics) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SessionMetrics.Marshal(b, m, deterministic)
}
func (m *SessionMetrics) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SessionMetrics.Merge(m, src)
}
func (m *SessionMetrics) XXX_Size() int {
	return xxx_messageInfo_SessionMetrics.Size(m)
}
func (m *SessionMetrics) XXX_DiscardUnknown() {
	xxx_messageInfo_SessionMetrics.DiscardUnknown(m)
}

var xxx_messageInfo_SessionMetrics proto.InternalMessageInfo

func (m *SessionMetrics) GetLocations() []*LocationMetrics {
	if m != nil {
		return m.Locations
	}
	return nil
}

func init() {
	proto.RegisterType((*GetServicesRequest)(nil), "schema.GetServicesRequest")
	proto.RegisterType((*GetServicesResponse)(nil), "schema.GetServicesResponse")
	proto.RegisterType((*GetInstancesRequest)(nil), "schema.GetInstancesRequest")
	proto.RegisterType((*GetInstancesResponse)(nil), "schema.GetInstancesResponse")
	proto.RegisterType((*GetSessionsRequest)(nil), "schema.GetSessionsRequest")
	proto.RegisterType((*GetSessionsResponse)(nil), "schema.GetSessionsResponse")
	proto.RegisterType((*SubscribeForSessionRequest)(nil), "schema.SubscribeForSessionRequest")
	proto.RegisterType((*MemoryUtilizationRate)(nil), "schema.MemoryUtilizationRate")
	proto.RegisterType((*MemoryUtilizationRate_Values)(nil), "schema.MemoryUtilizationRate.Values")
	proto.RegisterType((*LocationMetrics)(nil), "schema.LocationMetrics")
	proto.RegisterType((*SessionMetrics)(nil), "schema.SessionMetrics")
}

func init() { proto.RegisterFile("frontend.proto", fileDescriptor_eca3873955a29cfe) }

var fileDescriptor_eca3873955a29cfe = []byte{
	// 604 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x94, 0x5d, 0x6f, 0xd3, 0x3e,
	0x14, 0xc6, 0x97, 0xbd, 0xf4, 0xbf, 0x9c, 0x76, 0x9d, 0xfe, 0xee, 0x80, 0x92, 0x31, 0x28, 0x66,
	0x17, 0x93, 0x10, 0x29, 0x6c, 0x20, 0x84, 0xc4, 0xd5, 0x98, 0x36, 0x10, 0x54, 0x08, 0x4f, 0xe5,
	0x76, 0x4a, 0x32, 0x77, 0x98, 0xa5, 0x71, 0xb1, 0x9d, 0xa1, 0xf1, 0x1d, 0xb9, 0xe7, 0x8e, 0xaf,
	0x82, 0xe2, 0xb7, 0xb6, 0xa1, 0xc0, 0x65, 0x1e, 0xff, 0xfc, 0x9c, 0xc7, 0xc7, 0x39, 0x86, 0xf6,
	0x48, 0xf0, 0x42, 0xd1, 0xe2, 0x3c, 0x9e, 0x08, 0xae, 0x38, 0x6a, 0xc8, 0xec, 0x13, 0x1d, 0x27,
	0x51, 0x2b, 0xe3, 0xe3, 0x31, 0x2f, 0x8c, 0x1a, 0x6d, 0xa4, 0x49, 0x76, 0xe9, 0xa1, 0xe8, 0xee,
	0x05, 0xe7, 0x17, 0x39, 0xed, 0xeb, 0xaf, 0xb4, 0x1c, 0xf5, 0xcf, 0x4b, 0x91, 0x28, 0xe6, 0x70,
	0xbc, 0x05, 0xe8, 0x84, 0xaa, 0x53, 0x2a, 0xae, 0x58, 0x46, 0x25, 0xa1, 0x5f, 0x4a, 0x2a, 0x15,
	0x7e, 0x02, 0x9d, 0x39, 0x55, 0x4e, 0x78, 0x21, 0x29, 0x8a, 0x60, 0x5d, 0x5a, 0xad, 0x1b, 0xf4,
	0x56, 0xf6, 0x42, 0xe2, 0xbf, 0x71, 0x5f, 0x6f, 0x79, 0x53, 0x48, 0x95, 0x14, 0x53, 0x27, 0xd4,
	0x85, 0xff, 0x2c, 0xd2, 0x0d, 0x7a, 0xc1, 0x5e, 0x48, 0xdc, 0x27, 0xfe, 0x00, 0x5b, 0xf3, 0x1b,
	0x6c, 0x91, 0x17, 0x10, 0x32, 0x27, 0xea, 0x2a, 0xcd, 0xfd, 0xed, 0xd8, 0x1c, 0x35, 0x76, 0xf4,
	0x11, 0x95, 0x99, 0x60, 0x93, 0xea, 0x1c, 0x64, 0x4a, 0xe3, 0x81, 0x3d, 0x8c, 0x94, 0x8c, 0x17,
	0x3e, 0xc2, 0x73, 0x58, 0x77, 0x88, 0xce, 0xf0, 0x0f, 0x3f, 0x0f, 0xe3, 0x43, 0xdb, 0x05, 0x67,
	0x67, 0x03, 0x3e, 0xac, 0xba, 0x60, 0x34, 0x9b, 0x6f, 0xd3, 0xf9, 0x59, 0x96, 0x78, 0x00, 0x13,
	0x88, 0x4e, 0xcb, 0xb4, 0x72, 0x4f, 0xe9, 0x31, 0x17, 0x0e, 0xb0, 0xd1, 0x9e, 0x56, 0xdd, 0xd1,
	0x8a, 0x4d, 0x16, 0xd5, 0x9c, 0x66, 0x83, 0x39, 0x14, 0xff, 0x5c, 0x86, 0x1b, 0x03, 0x3a, 0xe6,
	0xe2, 0x7a, 0xa8, 0x58, 0xce, 0xbe, 0xe9, 0xfb, 0x24, 0x89, 0xa2, 0xe8, 0x11, 0xac, 0xca, 0x49,
	0xe2, 0xcc, 0x6e, 0xc7, 0xe6, 0xf2, 0x63, 0x77, 0xf9, 0xf1, 0x91, 0xbd, 0x7c, 0xa2, 0x31, 0xf4,
	0x12, 0x1a, 0x57, 0x49, 0x5e, 0x52, 0xd9, 0x5d, 0xd6, 0x1b, 0x76, 0x5d, 0xf5, 0x85, 0xee, 0xf1,
	0x47, 0xcd, 0x12, 0xbb, 0x27, 0xfa, 0x11, 0x40, 0xc3, 0x48, 0xe8, 0x01, 0x6c, 0x24, 0x79, 0xce,
	0xb3, 0x33, 0x9e, 0x7e, 0xa6, 0x99, 0x92, 0x3a, 0x40, 0x40, 0x5a, 0x5a, 0x7c, 0x6f, 0x34, 0x74,
	0x0f, 0x9a, 0x06, 0x4a, 0xaf, 0x95, 0x2d, 0x19, 0x10, 0xd0, 0xd2, 0x61, 0xa5, 0xa0, 0xfb, 0xd0,
	0x1a, 0x09, 0x4a, 0xbd, 0xc9, 0x8a, 0x26, 0x9a, 0x95, 0xe6, 0x3c, 0x76, 0x00, 0x34, 0x62, 0x2c,
	0x56, 0x35, 0x10, 0x56, 0x8a, 0x71, 0xd8, 0x85, 0x36, 0x2b, 0xce, 0x4a, 0x39, 0xf5, 0x58, 0x33,
	0x41, 0x58, 0x31, 0x94, 0xde, 0xa4, 0x07, 0x2d, 0x4b, 0x19, 0x9b, 0x86, 0x49, 0xa2, 0x19, 0xed,
	0x83, 0xbf, 0xc2, 0xe6, 0x3b, 0x9e, 0xe9, 0x93, 0x0f, 0xa8, 0x12, 0x2c, 0x93, 0xe8, 0x00, 0xd6,
	0x44, 0xa2, 0xfc, 0x2f, 0xb9, 0xf3, 0xd7, 0x56, 0x11, 0xc3, 0xa2, 0x3e, 0x84, 0x59, 0x92, 0xe7,
	0x52, 0x25, 0xd9, 0xa5, 0xed, 0xf1, 0xff, 0x6e, 0xe3, 0x2b, 0xb7, 0x40, 0xa6, 0x0c, 0x3e, 0x81,
	0xb6, 0xbd, 0x79, 0x57, 0xf7, 0x19, 0x84, 0xb9, 0x8d, 0xe2, 0x6a, 0xdf, 0x72, 0x16, 0xb5, 0x8c,
	0x64, 0x4a, 0xee, 0x7f, 0x5f, 0x86, 0xce, 0x80, 0x8e, 0x27, 0x82, 0x8f, 0x58, 0x4e, 0xc5, 0xb1,
	0x7d, 0x3a, 0xd0, 0x6b, 0x68, 0xce, 0x4c, 0x36, 0xf2, 0xff, 0xdb, 0xef, 0x8f, 0x40, 0xb4, 0xbd,
	0x70, 0xcd, 0x0c, 0x01, 0x5e, 0x42, 0x6f, 0xa1, 0x35, 0x3b, 0xbf, 0x68, 0x16, 0xaf, 0x3f, 0x03,
	0xd1, 0x9d, 0xc5, 0x8b, 0xde, 0xcc, 0xc5, 0x32, 0x53, 0x53, 0x8b, 0x35, 0x37, 0xce, 0xb5, 0x58,
	0xf3, 0xb3, 0x89, 0x97, 0xd0, 0x10, 0x3a, 0x0b, 0x06, 0x0e, 0x61, 0x3f, 0x58, 0x7f, 0x9c, 0xc6,
	0xe8, 0x66, 0x6d, 0xf8, 0x6c, 0x5b, 0xf1, 0xd2, 0xe3, 0x20, 0x6d, 0xe8, 0x19, 0x3a, 0xf8, 0x15,
	0x00, 0x00, 0xff, 0xff, 0x7e, 0x68, 0x70, 0x9e, 0x85, 0x05, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MemprofilerFrontendClient is the client API for MemprofilerFrontend service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MemprofilerFrontendClient interface {
	// GetServices returns the list of registered services
	GetServices(ctx context.Context, in *GetServicesRequest, opts ...grpc.CallOption) (*GetServicesResponse, error)
	// GetInstances returns the list of service instances
	GetInstances(ctx context.Context, in *GetInstancesRequest, opts ...grpc.CallOption) (*GetInstancesResponse, error)
	// GetSessions returns the list of available profiling sessions for a service instance
	GetSessions(ctx context.Context, in *GetSessionsRequest, opts ...grpc.CallOption) (*GetSessionsResponse, error)
	// SubscribeForSession returns the stream of session updates with fresh trend values, if it's still alive
	SubscribeForSession(ctx context.Context, in *SubscribeForSessionRequest, opts ...grpc.CallOption) (MemprofilerFrontend_SubscribeForSessionClient, error)
}

type memprofilerFrontendClient struct {
	cc *grpc.ClientConn
}

func NewMemprofilerFrontendClient(cc *grpc.ClientConn) MemprofilerFrontendClient {
	return &memprofilerFrontendClient{cc}
}

func (c *memprofilerFrontendClient) GetServices(ctx context.Context, in *GetServicesRequest, opts ...grpc.CallOption) (*GetServicesResponse, error) {
	out := new(GetServicesResponse)
	err := c.cc.Invoke(ctx, "/schema.MemprofilerFrontend/GetServices", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *memprofilerFrontendClient) GetInstances(ctx context.Context, in *GetInstancesRequest, opts ...grpc.CallOption) (*GetInstancesResponse, error) {
	out := new(GetInstancesResponse)
	err := c.cc.Invoke(ctx, "/schema.MemprofilerFrontend/GetInstances", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *memprofilerFrontendClient) GetSessions(ctx context.Context, in *GetSessionsRequest, opts ...grpc.CallOption) (*GetSessionsResponse, error) {
	out := new(GetSessionsResponse)
	err := c.cc.Invoke(ctx, "/schema.MemprofilerFrontend/GetSessions", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *memprofilerFrontendClient) SubscribeForSession(ctx context.Context, in *SubscribeForSessionRequest, opts ...grpc.CallOption) (MemprofilerFrontend_SubscribeForSessionClient, error) {
	stream, err := c.cc.NewStream(ctx, &_MemprofilerFrontend_serviceDesc.Streams[0], "/schema.MemprofilerFrontend/SubscribeForSession", opts...)
	if err != nil {
		return nil, err
	}
	x := &memprofilerFrontendSubscribeForSessionClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type MemprofilerFrontend_SubscribeForSessionClient interface {
	Recv() (*SessionMetrics, error)
	grpc.ClientStream
}

type memprofilerFrontendSubscribeForSessionClient struct {
	grpc.ClientStream
}

func (x *memprofilerFrontendSubscribeForSessionClient) Recv() (*SessionMetrics, error) {
	m := new(SessionMetrics)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// MemprofilerFrontendServer is the server API for MemprofilerFrontend service.
type MemprofilerFrontendServer interface {
	// GetServices returns the list of registered services
	GetServices(context.Context, *GetServicesRequest) (*GetServicesResponse, error)
	// GetInstances returns the list of service instances
	GetInstances(context.Context, *GetInstancesRequest) (*GetInstancesResponse, error)
	// GetSessions returns the list of available profiling sessions for a service instance
	GetSessions(context.Context, *GetSessionsRequest) (*GetSessionsResponse, error)
	// SubscribeForSession returns the stream of session updates with fresh trend values, if it's still alive
	SubscribeForSession(*SubscribeForSessionRequest, MemprofilerFrontend_SubscribeForSessionServer) error
}

// UnimplementedMemprofilerFrontendServer can be embedded to have forward compatible implementations.
type UnimplementedMemprofilerFrontendServer struct {
}

func (*UnimplementedMemprofilerFrontendServer) GetServices(ctx context.Context, req *GetServicesRequest) (*GetServicesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetServices not implemented")
}
func (*UnimplementedMemprofilerFrontendServer) GetInstances(ctx context.Context, req *GetInstancesRequest) (*GetInstancesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetInstances not implemented")
}
func (*UnimplementedMemprofilerFrontendServer) GetSessions(ctx context.Context, req *GetSessionsRequest) (*GetSessionsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetSessions not implemented")
}
func (*UnimplementedMemprofilerFrontendServer) SubscribeForSession(req *SubscribeForSessionRequest, srv MemprofilerFrontend_SubscribeForSessionServer) error {
	return status.Errorf(codes.Unimplemented, "method SubscribeForSession not implemented")
}

func RegisterMemprofilerFrontendServer(s *grpc.Server, srv MemprofilerFrontendServer) {
	s.RegisterService(&_MemprofilerFrontend_serviceDesc, srv)
}

func _MemprofilerFrontend_GetServices_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetServicesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MemprofilerFrontendServer).GetServices(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/schema.MemprofilerFrontend/GetServices",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MemprofilerFrontendServer).GetServices(ctx, req.(*GetServicesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MemprofilerFrontend_GetInstances_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetInstancesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MemprofilerFrontendServer).GetInstances(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/schema.MemprofilerFrontend/GetInstances",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MemprofilerFrontendServer).GetInstances(ctx, req.(*GetInstancesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MemprofilerFrontend_GetSessions_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetSessionsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MemprofilerFrontendServer).GetSessions(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/schema.MemprofilerFrontend/GetSessions",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MemprofilerFrontendServer).GetSessions(ctx, req.(*GetSessionsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MemprofilerFrontend_SubscribeForSession_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(SubscribeForSessionRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(MemprofilerFrontendServer).SubscribeForSession(m, &memprofilerFrontendSubscribeForSessionServer{stream})
}

type MemprofilerFrontend_SubscribeForSessionServer interface {
	Send(*SessionMetrics) error
	grpc.ServerStream
}

type memprofilerFrontendSubscribeForSessionServer struct {
	grpc.ServerStream
}

func (x *memprofilerFrontendSubscribeForSessionServer) Send(m *SessionMetrics) error {
	return x.ServerStream.SendMsg(m)
}

var _MemprofilerFrontend_serviceDesc = grpc.ServiceDesc{
	ServiceName: "schema.MemprofilerFrontend",
	HandlerType: (*MemprofilerFrontendServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetServices",
			Handler:    _MemprofilerFrontend_GetServices_Handler,
		},
		{
			MethodName: "GetInstances",
			Handler:    _MemprofilerFrontend_GetInstances_Handler,
		},
		{
			MethodName: "GetSessions",
			Handler:    _MemprofilerFrontend_GetSessions_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "SubscribeForSession",
			Handler:       _MemprofilerFrontend_SubscribeForSession_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "frontend.proto",
}
